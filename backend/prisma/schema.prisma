// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Parents{
  id Int @id @default(autoincrement())
  name String
  phone_number Int 
  address String
  cities Cities? @relation(fields: [citiesId],references: [id])
  citiesId Int?
  townships Townwships? @relation(fields: [townshipsId],references: [id])
  townshipsId Int?
  pets Pets[]
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
}

model Pets{
  id Int @id @default(autoincrement())
  name String 
  gender String
  dob DateTime
  breed Breed @relation(fields: [breedId],references: [id])
  breedId Int
  status Status @relation(fields: [statusId],references: [id])
  statusId Int
  parents Parents? @relation(fields: [parentsId],references: [id],onDelete: Cascade)
  parentsId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
}

model Breed {
  id Int @id @default(autoincrement())
  name String
  pets Pets[]
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
}

model Status {
  id Int @id @default(autoincrement())
  Status_type String
  pets Pets[]
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
}

model Cities {
  id Int @id @default(autoincrement())
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  parents Parents[]
}

model Townwships{
  id Int @id @default(autoincrement())
  name String
  parents Parents[]
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
}

